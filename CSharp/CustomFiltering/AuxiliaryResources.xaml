<!--
  Xceed DataGrid for WPF - SAMPLE CODE - Custom Filtering Sample Application
  Copyright (c) 2007-2024 Xceed Software Inc.

  [AuxiliaryResources.xaml]

  This ResourceDictionary contains styles and templates useful for some features of this
  sample but not directly related to what it demonstrates.

  This file is part of the Xceed DataGrid for WPF product. The use 
  and distribution of this Sample Code is subject to the terms 
  and conditions referring to "Sample Code" that are specified in 
  the XCEED SOFTWARE LICENSE AGREEMENT accompanying this product.
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
                    xmlns:local="clr-namespace:Xceed.Wpf.DataGrid.Samples.CustomFiltering">

   <local:FlagPathConverter x:Key="flagconverter" />
   <local:MonthNameConverter x:Key="monthNameConverter" />
   <local:SolidColorBrushToColorConverter x:Key="solidColorBrushToColorConverter" />
   <local:MonthNamesDistinctValuesSortComparer x:Key="monthNamesDistinctValuesSortComparer" />
   <xcdg:NullToBooleanConverter x:Key="nullToBooleanConverter" />
   <xcdg:GreaterThanZeroConverter x:Key="greaterThanZeroConverter" />
   <xcdg:DateTimeToStringConverter x:Key="dateTimeToStringConverter" />

   <!-- CardTitle DataTemplate to display the flag and the name of the Country -->
   <DataTemplate x:Key="cardTitleDataTemplate">
      <StackPanel Orientation="Horizontal">
         <Image Source="{Binding [ShipCountry], Converter={StaticResource flagconverter}}"
                   ToolTip="{Binding [ShipCountry]}"
                   StretchDirection="DownOnly" />

         <TextBlock Text=" " />

         <StackPanel>
            <TextBlock Text="{Binding [ShipCity]}"
                           VerticalAlignment="Center" />

            <TextBlock Text="{Binding [ShipName]}"
                           VerticalAlignment="Center" />
         </StackPanel>
      </StackPanel>
   </DataTemplate>

   <!-- DataTemplate to display the name of the Country followed by the flag -->
   <DataTemplate x:Key="countryCellContentTemplate">
      <Grid>
         <Grid.ColumnDefinitions>
            <ColumnDefinition Width="30" />
            <ColumnDefinition Width="*" />
         </Grid.ColumnDefinitions>

         <Image Grid.Column="0"
                Margin="1,1,4,1"
                VerticalAlignment="Top"
                Source="{Binding Converter={StaticResource flagconverter}}" />

         <TextBlock Text="{Binding}"
                    Grid.Column="1"
                    Margin="2,0,4,0"
                    VerticalAlignment="Top" />
      </Grid>
   </DataTemplate>

   <!-- ScrollTip DataTemplate to display the flag of the Country -->
   <DataTemplate x:Key="scrollTipContentTemplate">
      <StackPanel>
         <Image Source="{Binding [ShipCountry], Converter={StaticResource flagconverter}}"
                   StretchDirection="DownOnly"
                   HorizontalAlignment="Center" />

         <TextBlock HorizontalAlignment="Center"
                       Text="{Binding [ShipCountry]}" />
      </StackPanel>
   </DataTemplate>

   <!-- DataTemplate to display the name of the Country followed by the flag -->
   <DataTemplate x:Key="countryComboBoxDataTemplate">
      <Grid>
         <Grid.ColumnDefinitions>
            <ColumnDefinition Width="65" />
            <ColumnDefinition Width="30" />
         </Grid.ColumnDefinitions>

         <TextBlock Grid.Column="0"
                       Text="{Binding}"
                       Padding="2,0,0,0"
                       VerticalAlignment="Top" />

         <Image Grid.Column="1"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top"
                   Source="{Binding Converter={StaticResource flagconverter}}" />
      </Grid>
   </DataTemplate>

   <!-- DataTemplate to display a date in a short form -->
   <DataTemplate x:Key="shortDateCellDataTemplate">
      <TextBlock Text="{Binding Converter={StaticResource dateTimeToStringConverter}, ConverterParameter='ShortDate' }" />
   </DataTemplate>

   <Style x:Key="singleSelectionModeAutoFilterControl"
           TargetType="xcdg:AutoFilterControl">
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="xcdg:AutoFilterControl">
               <Border x:Name="autoFilterControlBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                  <Grid>
                     <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                     </Grid.RowDefinitions>

                     <Button x:Name="ClearButton" 
                                    Grid.Row="0"
                                    MinHeight="24"
                                    Background="{TemplateBinding Background}"
                                    Content="{TemplateBinding ClearAutoFilterText}"
                                    Command="xcdg:AutoFilterControl.ClearAutoFilterValues"
                                    Foreground="{TemplateBinding Foreground}" />

                     <!-- ItemsSource will be set in OnApplyTemplate of AutoFilterControl because the DataGridContext does not
                                  redirects automatically to the DataGridCollectionView for the Master level -->
                     <ListBox x:Name="PART_DistinctValuesHost"
                                     Grid.Row="1"
                                     MaxHeight="350"
                                     Width="200"
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                     Background="{TemplateBinding Background}"
                                     Foreground="{TemplateBinding Foreground}"
                                     BorderThickness="0"
                                     ItemTemplate="{TemplateBinding DistinctValueItemTemplate}"
                                     ItemTemplateSelector="{TemplateBinding DistinctValueItemTemplateSelector}"
                                     ItemContainerStyle="{TemplateBinding DistinctValueItemContainerStyle}"
                                     ItemContainerStyleSelector="{TemplateBinding DistinctValueItemContainerStyleSelector}"
                                     SelectionMode="Single" />
                  </Grid>
               </Border>

               <!-- In the case of the MetroLight Theme, we have to force the Foreground to Black, otherwise it picks up the White from the ColumnManagerRow -->
               <ControlTemplate.Triggers>
                  <MultiDataTrigger>
                     <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource solidColorBrushToColorConverter}}"
                                      Value="White" />
                        <Condition Binding="{Binding Path=Background, ElementName=PART_DistinctValuesHost, Converter={StaticResource solidColorBrushToColorConverter}}"
                                      Value="White" />
                     </MultiDataTrigger.Conditions>
                     <MultiDataTrigger.Setters>
                        <Setter TargetName="PART_DistinctValuesHost"
                                   Property="Foreground"
                                   Value="Black" />
                        <Setter TargetName="ClearButton"
                                   Property="Foreground"
                                   Value="Black" />
                     </MultiDataTrigger.Setters>
                  </MultiDataTrigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="textBlockDistinctValueItemTemplate" 
           TargetType="xcdg:AutoFilterControl">
      <Setter Property="DistinctValueItemTemplate">
         <Setter.Value>
            <DataTemplate>
               <TextBlock Text="{Binding}" />
            </DataTemplate>
         </Setter.Value>
      </Setter>
   </Style>

</ResourceDictionary>
