<!--
Xceed DataGrid for WPF - SAMPLE CODE - Master/Detail Sample Application
Copyright (c) 2007-2024 Xceed Software Inc.

[MainPage.xaml]

This Page contains the UI declarations of the Master/Detail sample.

This file is part of the Xceed DataGrid for WPF product. The use 
and distribution of this Sample Code is subject to the terms 
and conditions referring to "Sample Code" that are specified in 
the XCEED SOFTWARE LICENSE AGREEMENT accompanying this product.
-->

<Page x:Class="Xceed.Wpf.DataGrid.Samples.MasterDetail.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
      xmlns:compModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
      xmlns:local="clr-namespace:Xceed.Wpf.DataGrid.Samples.MasterDetail">
   <Page.Resources>
      <ResourceDictionary>
         <ResourceDictionary.MergedDictionaries>
            <!-- Setting the DataGridControl's AutoCreateDetailConfigurations property 
                 to True is sufficient to activate the Master-Detail feature and will 
                 cover most needs. This is not what this sample does. -->
            <!-- This sample demonstrates how to configure the various detail grids.
                 Most of these configurations can be found in the following merged
                 dictionaries. These configurations are activated and deactivated in
                 code-behind according to the configuration panel. -->
            <ResourceDictionary Source="SubEmployeesDetailConfigurations.xaml" />
            <ResourceDictionary Source="OrdersDetailConfiguration.xaml" />
         </ResourceDictionary.MergedDictionaries>

         <!-- This sample uses a DataGridCollectionViewSource to display the data retrieved from the Employees DataTable. -->
         <xcdg:DataGridCollectionViewSource x:Key="cvsEmployees"
                                            Source="{Binding Source={x:Static Application.Current},Path=Employees}"
                                            AutoFilterMode="And"
                                            AutoCreateItemProperties="False"
                                            DistinctValuesConstraint="Filtered">
            <!-- Define the item properties that determine the columns that will be displayed in the master grid. -->
            <xcdg:DataGridCollectionViewSource.ItemProperties>
               <xcdg:DataGridItemProperty Name="Photo"
                                          CalculateDistinctValues="False" />
               <xcdg:DataGridItemProperty Name="FirstName"
                                          Title="First Name" />
               <xcdg:DataGridItemProperty Name="LastName"
                                          Title="Last Name" />
               <xcdg:DataGridItemProperty Name="HireDate"
                                          Title="Hire Date" />
               <xcdg:DataGridItemProperty Name="BirthDate"
                                          Title="Birth Date" />
               <xcdg:DataGridItemProperty Name="Address"
                                          CalculateDistinctValues="False" />
               <xcdg:DataGridItemProperty Name="City" />
               <xcdg:DataGridItemProperty Name="Country" />
               <xcdg:DataGridItemProperty Name="Region" />
               <xcdg:DataGridItemProperty Name="PostalCode"
                                          Title="Postal Code" />
            </xcdg:DataGridCollectionViewSource.ItemProperties>

            <!-- Define the two detail descriptions for the master grid (Subordinate 
                 employees and Orders). -->
            <xcdg:DataGridCollectionViewSource.DetailDescriptions>
               <!-- In this case, we will use the custom detail description that 
                    retrieves a list of the employees that report to the "master" employee. -->
               <local:EmployeesDetailDescription AutoFilterMode="And"
                                                 DistinctValuesConstraint="Filtered"
                                                 AutoCreateItemProperties="False">
                  <!-- Like the master-level collection view, the item properties that are defined here represent
                       the columns that will appear in the resulting details. -->
                  <local:EmployeesDetailDescription.ItemProperties>
                     <xcdg:DataGridItemProperty Name="Photo"
                                                CalculateDistinctValues="False" />
                     <xcdg:DataGridItemProperty Name="FirstName"
                                                Title="First Name" />
                     <xcdg:DataGridItemProperty Name="LastName"
                                                Title="Last Name" />
                  </local:EmployeesDetailDescription.ItemProperties>

               </local:EmployeesDetailDescription>

               <!-- Define another sibling detail description that will be displayed at the same level as
                    the previous one. -->
               <xcdg:DataRelationDetailDescription RelationName="EmployeesOrders"
                                                   AutoFilterMode="And"
                                                   DistinctValuesConstraint="Filtered"
                                                   AutoCreateItemProperties="False">

                  <!--Defining foreign key descriptions will make sure sorting on the corresponding columns will be according to the displayed values,
                not according to the foreign key values-->
                  <xcdg:DataRelationDetailDescription.ItemProperties>
                     <xcdg:DataGridItemProperty Name="OrderID"
                                                CalculateDistinctValues="False" />
                     <xcdg:DataGridItemProperty Name="CustomerID">
                        <xcdg:DataGridItemProperty.ForeignKeyDescription>
                           <xcdg:DataTableForeignKeyDescription ItemsSource="{Binding Source={x:Static Application.Current},Path=Customers}"
                                                                ValuePath="CustomerID"
                                                                ForeignKeyConverter="{StaticResource customerForeignKeyConverter}" />
                        </xcdg:DataGridItemProperty.ForeignKeyDescription>
                     </xcdg:DataGridItemProperty>
                     <xcdg:DataGridItemProperty Name="ShipVia">
                        <xcdg:DataGridItemProperty.ForeignKeyDescription>
                           <xcdg:DataTableForeignKeyDescription ItemsSource="{Binding Source={x:Static Application.Current},Path=Shippers}"
                                                                ValuePath="ShipperID"
                                                                DisplayMemberPath="CompanyName" />
                        </xcdg:DataGridItemProperty.ForeignKeyDescription>
                     </xcdg:DataGridItemProperty>
                     <xcdg:DataGridItemProperty Name="Freight" />
                     <xcdg:DataGridItemProperty Name="OrderDate" />
                     <xcdg:DataGridItemProperty Name="RequiredDate" />
                     <xcdg:DataGridItemProperty Name="ShipCountry" />
                  </xcdg:DataRelationDetailDescription.ItemProperties>

                  <!-- Create statistical functions whose results will be displayed in the resulting details. -->
                  <xcdg:DataRelationDetailDescription.StatFunctions>
                     <xcdg:SumFunction ResultPropertyName="freightTotal"
                                       SourcePropertyName="Freight" />
                  </xcdg:DataRelationDetailDescription.StatFunctions>

                  <!-- Define child detail descriptions for this detail description. -->
                  <xcdg:DataRelationDetailDescription.DetailDescriptions>
                     <xcdg:DataRelationDetailDescription RelationName="OrdersOrderDetails"
                                                         AutoFilterMode="And"
                                                         DistinctValuesConstraint="Filtered"
                                                         AutoCreateItemProperties="False">
                        <xcdg:DataRelationDetailDescription.ItemProperties>
                           <xcdg:DataGridItemProperty Name="ProductID">
                              <xcdg:DataGridItemProperty.ForeignKeyDescription>
                                 <xcdg:DataTableForeignKeyDescription ItemsSource="{Binding Source={x:Static Application.Current},Path=Products}"
                                                                      ValuePath="ProductID"
                                                                      DisplayMemberPath="ProductName" />
                              </xcdg:DataGridItemProperty.ForeignKeyDescription>
                           </xcdg:DataGridItemProperty>
                           <xcdg:DataGridItemProperty Name="Quantity" />
                           <xcdg:DataGridItemProperty Name="UnitPrice" />
                        </xcdg:DataRelationDetailDescription.ItemProperties>
                     </xcdg:DataRelationDetailDescription>
                  </xcdg:DataRelationDetailDescription.DetailDescriptions>
               </xcdg:DataRelationDetailDescription>

            </xcdg:DataGridCollectionViewSource.DetailDescriptions>
         </xcdg:DataGridCollectionViewSource>

         <!-- Provide a DataTemplate for the DataGridContext which will be used 
              in the Breadcrumb control. -->
         <DataTemplate DataType="{x:Type xcdg:DataGridContext}">
            <DockPanel TextElement.FontSize="10"
                       TextElement.Foreground="#BCBCBC">
               <TextBlock x:Name="glyphTextBlock"
                          Text=">"
                          Margin="4,0,4,0"
                          DockPanel.Dock="Left" />
               <TextBlock x:Name="titleTextBlock"
                          Text="{Binding SourceDetailConfiguration.Title}"
                          PreviewMouseLeftButtonDown="titleTextBlock_PreviewMouseLeftButtonDown" />
            </DockPanel>

            <DataTemplate.Triggers>
               <DataTrigger Binding="{Binding SourceDetailConfiguration}"
                            Value="{x:Null}">
                  <Setter TargetName="titleTextBlock"
                          Property="Text"
                          Value="{Binding DataGridControl.ItemsSourceName}" />
                  <Setter TargetName="glyphTextBlock"
                          Property="Visibility"
                          Value="Collapsed" />
               </DataTrigger>
            </DataTemplate.Triggers>
         </DataTemplate>
      </ResourceDictionary>
   </Page.Resources>

   <DockPanel>
      <!-- This is the configuration Panel at the Top. -->
      <ContentControl x:Name="parametersHost"
                      DockPanel.Dock="Top"
                      Style="{StaticResource parametersHostStyle}">
         <StackPanel Orientation="Horizontal"
                     VerticalAlignment="Top">
            <GroupBox Header="Master/Detail Actions"
                      Margin="{StaticResource groupBoxMargin}"
                      Padding="{StaticResource groupBoxPadding}">
               <StackPanel>
                  <CheckBox x:Name="allowDetailToggle"
                            Margin="{StaticResource configItemMargin}"
                            IsChecked="{Binding Source={x:Static local:MainPageParams.Singleton},Path=AllowDetailToggle}"
                            Content="Allow details to be expanded or collapsed"
                            ToolTip="Indicates if details can be expanded or collapsed by the end user." />

                  <CheckBox x:Name="showOrdersDetail"
                            Margin="{StaticResource configItemMargin}"
                            IsChecked="True"
                            Checked="ShowOrdersDetailChecked"
                            Unchecked="ShowOrdersDetailChecked"
                            Content="Show order/details details"
                            ToolTip="Indicates if the order/details details are visible." />

                  <CheckBox x:Name="showSubEmployeesDetail"
                            Margin="{StaticResource configItemMargin}"
                            IsChecked="False"
                            Checked="ShowSubEmployeesDetailChecked"
                            Unchecked="ShowSubEmployeesDetailChecked"
                            Content="Show subordinate/employee details"
                            ToolTip="Indicates if the subordinate/employee details are visible." />
               </StackPanel>
            </GroupBox>
         </StackPanel>
      </ContentControl>

      <!-- The main DataGridControl. -->
      <xcdg:DataGridControl x:Name="grid"
                            CellEditorDisplayConditions="None"
                            ItemsSource="{Binding Source={StaticResource cvsEmployees}}"
                            EditTriggers="BeginEditCommand,ActivationGesture,ClickOnCurrentCell"
                            ItemScrollingBehavior="Immediate"
                            AutoCreateDetailConfigurations="False"
                            AutoCreateForeignKeyConfigurations="True"
                            AllowDetailToggle="{Binding Source={x:Static local:MainPageParams.Singleton},Path=AllowDetailToggle}"
                            IsDeleteCommandEnabled="True"
                            DeletingSelectedItems="grid_DeletingSelectedItems"
                            DeletingSelectedItemError="grid_DeletingSelectedItemError">

         <xcdg:DataGridControl.ItemContainerStyle>
            <Style TargetType="{x:Type xcdg:DataRow}">
               <!-- We force the height of the DataRow to be 45 (height of the Photo 
                    column) to avoid resize when the Photo column is virtualized -->
               <Setter Property="MinHeight"
                       Value="45" />
            </Style>
         </xcdg:DataGridControl.ItemContainerStyle>

         <xcdg:DataGridControl.View>
            <!-- In this sample, you can define this resource to specify the default 
                 theme this DataGridControl will be in. This is not mandatory, so we
                 use a DynamicResource to silently ignore its absence. -->
            <xcdg:TableflowView Theme="{DynamicResource defaultTheme}" />
         </xcdg:DataGridControl.View>

         <xcdg:DataGridControl.Columns>
            <xcdg:Column FieldName="Photo"
                         Width="45" />

            <xcdg:Column FieldName="FirstName" />

            <xcdg:Column FieldName="LastName" />

            <xcdg:Column FieldName="HireDate"
                         CellContentTemplate="{StaticResource shortDateCellDataTemplate}" />

            <xcdg:Column FieldName="BirthDate"
                         CellContentTemplate="{StaticResource shortDateCellDataTemplate}" />

            <xcdg:Column FieldName="Country"
                         GroupValueTemplate="{StaticResource countryCellContentTemplate}"
                         CellContentTemplate="{StaticResource countryCellContentTemplate}" />

            <!-- The other columns will be added after these ones and will have default 
                 appearance and behavior when they are automatically added upon loading. -->
         </xcdg:DataGridControl.Columns>

      </xcdg:DataGridControl>
   </DockPanel>
</Page>
