<!--
  Xceed DataGrid for WPF - SAMPLE CODE - Flexible Binding Sample Application
  Copyright (c) 2007-2024 Xceed Software Inc.

  [AuxiliaryResources.xaml]

  This ResourceDictionary contains styles and templates useful for some features of this
  sample but not directly related to what it demonstrates.

  This file is part of the Xceed DataGrid for WPF product. The use 
  and distribution of this Sample Code is subject to the terms 
  and conditions referring to "Sample Code" that are specified in 
  the XCEED SOFTWARE LICENSE AGREEMENT accompanying this product.
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
                    xmlns:local="clr-namespace:Xceed.Wpf.DataGrid.Samples.FlexibleBinding">

   <!-- Define a resource for the converters needed by the cell content templates. -->
   <local:FlagPathConverter x:Key="flagconverter" />
   <xcdg:CurrencyConverter x:Key="currencyConverter" />
   <xcdg:DateTimeToStringConverter x:Key="dateTimeToStringConverter" />

   <local:CustomerMultiConverter x:Key="customerMultiConverter" />

   <!--Defined specific template for correctly showing the ColumnManagerRow and      
       GroupByControl when we are displaying the grid as a card view-->
   <DataTemplate x:Key="cardViewColumnManagerRowAndGroupByControl">
      <DockPanel MinHeight="60">
         <Border DockPanel.Dock="Right"
                 Height="{Binding ElementName=groupByControl, Path=ActualHeight, Mode=OneWay, FallbackValue=60}">
            <xcdg:ColumnManagerRow x:Name="columnManagerRow" />
         </Border>
         <xcdg:GroupByControl x:Name="groupByControl" />
      </DockPanel>
   </DataTemplate>

   <!-- DataTemplate to display the name of the Country followed by the flag -->
   <DataTemplate x:Key="countryCellContentTemplate">
      <Grid>
         <Grid.ColumnDefinitions>
            <ColumnDefinition Width="30" />
            <ColumnDefinition Width="*" />
         </Grid.ColumnDefinitions>

         <Image Grid.Column="0"
                Margin="1,1,4,1"
                VerticalAlignment="Top"
                Source="{Binding Converter={StaticResource flagconverter}}" />

         <TextBlock Text="{Binding}"
                    Grid.Column="1"
                    Margin="2,0,4,0"
                    VerticalAlignment="Top" />
      </Grid>
   </DataTemplate>

   <!--A data template that will be used to format a double in currency form-->
   <DataTemplate x:Key="currencyCellDataTemplate">
      <TextBlock Text="{Binding Converter={StaticResource currencyConverter}}" />
   </DataTemplate>

   <!--A data template that will be used to format a date in short form-->
   <DataTemplate x:Key="shortDateCellDataTemplate">
      <TextBlock Text="{Binding Converter={StaticResource dateTimeToStringConverter}, ConverterParameter='ShortDate' }" />
   </DataTemplate>

   <!--A data template that will be used to represent a category with his name,
       in a group (when grouped by CategoryID) -->
   <DataTemplate x:Key="categoryGroupDataTemplate">
      <TextBlock Text="{Binding CategoryName}" />
   </DataTemplate>

   <!--A data template that will be used to represent a period with its name-->
   <DataTemplate x:Key="periodDataTemplate">
      <TextBlock Text="{Binding}" />
   </DataTemplate>

   <!--A data template that will be used to represent a customer with his 
       company name and contact name-->
   <DataTemplate x:Key="customerDataTemplate">
      <TextBlock>
         <TextBlock.Text>
            <MultiBinding Converter="{StaticResource customerMultiConverter}">
               <Binding Path="CompanyName" />
               <Binding Path="ContactName" />
            </MultiBinding>
         </TextBlock.Text>
      </TextBlock>
   </DataTemplate>

</ResourceDictionary>