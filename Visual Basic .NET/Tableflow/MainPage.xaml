<!--
Xceed DataGrid for WPF - SAMPLE CODE - Tableflow™ View Sample Application
Copyright (c) 2007-2024 Xceed Software Inc.

[MainPage.xaml]

This Page contains the UI declarations of the TableFlowView sample.

This file is part of the Xceed DataGrid for WPF product. The use 
and distribution of this Sample Code is subject to the terms 
and conditions referring to "Sample Code" that are specified in 
the XCEED SOFTWARE LICENSE AGREEMENT accompanying this product.
-->

<Page x:Class="Xceed.Wpf.DataGrid.Samples.Tableflow.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
      xmlns:local="clr-namespace:Xceed.Wpf.DataGrid.Samples.Tableflow"
      xmlns:s="clr-namespace:System;assembly=mscorlib"
      xmlns:compModel="clr-namespace:System.ComponentModel;assembly=WindowsBase">

   <Page.Resources>
      <ResourceDictionary>
         <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary Source="AuxiliaryResources.xaml" />
            <ResourceDictionary Source="OrdersDetailConfiguration.xaml" />
         </ResourceDictionary.MergedDictionaries>

         <!-- In order to activate the AutoFiltering correctly, we must explicitly define all the 
              DataGridItemProperties we want to display in the grid and set their CalculateDistinctValues
              properties. By default, all DataGridItemProperty objects that do not have their CalculateDistinctValues
              property explicitly set will use the value of the DataGridCollectionViewSource's DefaultCalculateDistinctValues
              property. -->
         <xcdg:DataGridCollectionViewSource x:Key="cvsOrders"
                                            Source="{Binding Source={x:Static Application.Current},Path=Orders}"
                                            AutoFilterMode="And"
                                            AutoCreateItemProperties="False"
                                            DefaultCalculateDistinctValues="False">

            <!--Defining foreign key descriptions will make sure sorting on the corresponding columns will be according to the displayed values,
                not according to the foreign key values-->
            <xcdg:DataGridCollectionViewSource.ItemProperties>
               <xcdg:DataGridItemProperty Name="OrderID" />
               <xcdg:DataGridItemProperty Name="EmployeeID"
                                          CalculateDistinctValues="True">
                  <xcdg:DataGridItemProperty.ForeignKeyDescription>
                     <xcdg:DataTableForeignKeyDescription ItemsSource="{Binding Source={x:Static Application.Current},Path=Employees}"
                                                          ValuePath="EmployeeID"
                                                          ForeignKeyConverter="{StaticResource employeeForeignKeyConverter}" />
                  </xcdg:DataGridItemProperty.ForeignKeyDescription>
               </xcdg:DataGridItemProperty>
               <xcdg:DataGridItemProperty Name="CustomerID"
                                          CalculateDistinctValues="True">
                  <xcdg:DataGridItemProperty.ForeignKeyDescription>
                     <xcdg:DataTableForeignKeyDescription ItemsSource="{Binding Source={x:Static Application.Current},Path=Customers}"
                                                          ValuePath="CustomerID"
                                                          ForeignKeyConverter="{StaticResource customerForeignKeyConverter}" />
                  </xcdg:DataGridItemProperty.ForeignKeyDescription>
               </xcdg:DataGridItemProperty>
               <xcdg:DataGridItemProperty Name="ShipCity"
                                          CalculateDistinctValues="True" />
               <xcdg:DataGridItemProperty Name="ShipCountry"
                                          CalculateDistinctValues="True" />
               <xcdg:DataGridItemProperty Name="ShipName"
                                          CalculateDistinctValues="True" />
               <xcdg:DataGridItemProperty Name="ShipVia"
                                          CalculateDistinctValues="True">
                  <xcdg:DataGridItemProperty.ForeignKeyDescription>
                     <xcdg:DataTableForeignKeyDescription ItemsSource="{Binding Source={x:Static Application.Current},Path=Shippers}"
                                                          ValuePath="ShipperID"
                                                          DisplayMemberPath="CompanyName" />
                  </xcdg:DataGridItemProperty.ForeignKeyDescription>
               </xcdg:DataGridItemProperty>
               <xcdg:DataGridItemProperty Name="ShippedDate" />
               <xcdg:DataGridItemProperty Name="ShipPostalCode"
                                          CalculateDistinctValues="True" />
               <xcdg:DataGridItemProperty Name="ShipRegion"
                                          CalculateDistinctValues="True" />
               <xcdg:DataGridItemProperty Name="Freight" />
               <xcdg:DataGridItemProperty Name="OrderDate" />
               <xcdg:DataGridItemProperty Name="RequiredDate" />
               <xcdg:DataGridItemProperty Name="ShipAddress" />
            </xcdg:DataGridCollectionViewSource.ItemProperties>

            <xcdg:DataGridCollectionViewSource.GroupDescriptions>
               <xcdg:DataGridGroupDescription PropertyName="ShipCountry" />
               <xcdg:DataGridGroupDescription PropertyName="ShipCity" />
            </xcdg:DataGridCollectionViewSource.GroupDescriptions>

            <xcdg:DataGridCollectionViewSource.SortDescriptions>
               <compModel:SortDescription PropertyName="OrderID"
                                          Direction="Ascending" />
            </xcdg:DataGridCollectionViewSource.SortDescriptions>

            <!-- Define child detail descriptions for this detail description. -->
            <xcdg:DataGridCollectionViewSource.DetailDescriptions>

               <xcdg:DataRelationDetailDescription RelationName="OrdersOrderDetails"
                                                   AutoFilterMode="And"
                                                   DistinctValuesConstraint="Filtered"
                                                   AutoCreateItemProperties="False">
                  <xcdg:DataRelationDetailDescription.ItemProperties>
                     <xcdg:DataGridItemProperty Name="ProductID">
                        <xcdg:DataGridItemProperty.ForeignKeyDescription>
                           <xcdg:DataTableForeignKeyDescription ItemsSource="{Binding Source={x:Static Application.Current},Path=Products}"
                                                                ValuePath="ProductID"
                                                                DisplayMemberPath="ProductName" />
                        </xcdg:DataGridItemProperty.ForeignKeyDescription>
                     </xcdg:DataGridItemProperty>
                     <xcdg:DataGridItemProperty Name="Quantity" />
                     <xcdg:DataGridItemProperty Name="UnitPrice" />
                  </xcdg:DataRelationDetailDescription.ItemProperties>

                  <xcdg:DataRelationDetailDescription.StatFunctions>
                     <xcdg:SumFunction ResultPropertyName="UnitPriceTotal"
                                       SourcePropertyName="UnitPrice" />
                  </xcdg:DataRelationDetailDescription.StatFunctions>

               </xcdg:DataRelationDetailDescription>
            </xcdg:DataGridCollectionViewSource.DetailDescriptions>

         </xcdg:DataGridCollectionViewSource>

         <!-- This DataTemplate containing a ColumnManagerRow will be added in the 
              FixedHeaders if the corresponding CheckBox is checked in the 
              ConfigurationPanel. This is done in code-behind. -->
         <DataTemplate x:Key="columnManagerRowTemplate">
            <xcdg:ColumnManagerRow AllowAutoFilter="{Binding Source={x:Static local:ConfigurationData.Singleton}, Path=FilteringMethodAuto}" />
         </DataTemplate>

         <!-- You can provide your own filter editor as long as you can express its value
              as a FilterCriterion, either via a Binding Converter or, like here, using a
              property specifically created for it. -->
         <DataTemplate x:Key="dateFilterTemplate">
            <!-- Bind the FilterDatePicker's FilterCriterion property to the parent 
                 FilterCell's Content property using the CellEditorBinding tool. -->
            <local:FilterDatePicker FilterCriterion="{xcdg:CellEditorBinding}"
                                    StartDate="1996/01/01"
                                    EndDate="1999/12/31" />
         </DataTemplate>

         <!-- This DataTemplate containing a FilterRow will be added in the 
              FixedHeaders if the corresponding RadioButton is checked in the 
              ConfigurationPanel. This is done in code-behind. -->
         <DataTemplate x:Key="filterRowTemplate">
            <!-- We force the height of the FilterRow to be 32 to 
                 avoid resize when the ComboBox editor is assigned a value. -->
            <xcdg:FilterRow MinHeight="32">
               <!-- It is not aesthetically pleasing to have the ClearFilter button 
                    displayed alongside the ComboBox. Hide it for the three foreign-
                    key columns. Removing the filter will be accomplished by selecting
                    the empty item in the list. -->
               <xcdg:FilterCell FieldName="EmployeeID"
                                ClearFilterButtonVisibility="Never" />

               <xcdg:FilterCell FieldName="CustomerID"
                                ClearFilterButtonVisibility="Never" />

               <xcdg:FilterCell FieldName="ShipVia"
                                ClearFilterButtonVisibility="Never" />

               <!-- Use a custom filter editor for the three DateTime columns. -->
               <xcdg:FilterCell FieldName="OrderDate"
                                FilterEditorTemplate="{StaticResource dateFilterTemplate}" />

               <xcdg:FilterCell FieldName="ShippedDate"
                                FilterEditorTemplate="{StaticResource dateFilterTemplate}" />

               <xcdg:FilterCell FieldName="RequiredDate"
                                FilterEditorTemplate="{StaticResource dateFilterTemplate}" />
            </xcdg:FilterRow>
         </DataTemplate>

         <!-- This DataTemplate containing a InsertionRow will be added in the 
              FixedHeaders if the corresponding CheckBox is checked in the 
              ConfigurationPanel. This is done in code-behind. -->
         <DataTemplate x:Key="insertionRowTemplate">
            <!-- We force the height of the FilterRow to be 32 to 
                 avoid resize when the ComboBox editor is assigned a value. -->
            <xcdg:InsertionRow InsertionMode="{Binding Source={x:Static local:ConfigurationData.Singleton}, Path=InsertionMode}" />
         </DataTemplate>

         <!-- This DataTemplate containing a HierarchicalGroupByControl will be added in 
              the FixedHeaders if the corresponding CheckBox is checked in the 
              ConfigurationPanel. This is done in code-behind. -->
         <DataTemplate x:Key="hierarchicalGroupByControlTemplate">
            <xcdg:HierarchicalGroupByControl xcdg:TableflowView.CanScrollHorizontally="False" />
         </DataTemplate>

         <!-- This DataTemplate containing a HierarchicalGroupByControl will be added in 
              the FixedHeaders if the corresponding CheckBox is checked in the 
              ConfigurationPanel and if the ColumnManagerRow and Insertion are NOT shown.
              This is done in code-behind. -->
         <DataTemplate x:Key="aloneHierarchicalGroupByControlTemplate">
            <!-- Because this HierarchicalGroupByControl will be alone in the FixedHeaders,
                 its DesiredSize will be respected. Set the MinWidth to make sure that it
                 will fill the viewport horizontally. -->
            <xcdg:HierarchicalGroupByControl xcdg:TableflowView.CanScrollHorizontally="False"
                                             MinWidth="{Binding RelativeSource={RelativeSource AncestorType={x:Type xcdg:DataGridScrollViewer}}, Path=ExtentWidth}" />
         </DataTemplate>

         <!-- These ForeignKeyConfigurations are optional; the Foreign-Keys feature would work very well without them. They are there because we want to specify an 
              ItemsSource having an empty entry (which is not in the foreign table). This empty entry allows a end-user to empty a field or clear a FilterCell.
              Also because a DisplayMember value is not defined, because of the complex CellContentTemplate used, a ForeignKeyValueConverter must be defined so the
              search feature correctly find matching values in these ForeignKey columns.  -->
         <xcdg:ForeignKeyConfiguration x:Key="employeesForeignKeyConfiguration"
                                       ItemsSource="{Binding Source={x:Static Application.Current},Path=EmployeesWithEmptyEntry}"
                                       ValuePath="EmployeeID"
                                       ForeignKeyValueConverter="{StaticResource nameConverter}" />

         <xcdg:ForeignKeyConfiguration x:Key="customersForeignKeyConfiguration"
                                       ItemsSource="{Binding Source={x:Static Application.Current},Path=CustomersWithEmptyEntry}"
                                       ValuePath="CustomerID"
                                       ForeignKeyValueConverter="{StaticResource customerConverter}" />

         <xcdg:ForeignKeyConfiguration x:Key="shipViaForeignKeyConfiguration"
                                       ItemsSource="{Binding Source={x:Static Application.Current},Path=ShippersWithEmptyEntry}"
                                       ValuePath="ShipperID"
                                       DisplayMemberPath="CompanyName" />

         <!-- This DataTemplate containing a MergedColumnManagerRow will be added in 
              the FixedHeaders if the corresponding CheckBox is checked in the 
              ConfigurationPanel. This is done in code-behind. -->
         <DataTemplate x:Key="mergedColumnManagerRowTemplate">
            <xcdg:MergedColumnManagerRow />
         </DataTemplate>

         <local:CustomerMultiConverter x:Key="customerMultiConverter" />

      </ResourceDictionary>
   </Page.Resources>

   <DockPanel>
      <ContentControl x:Name="parametersHost"
                      DockPanel.Dock="Top"
                      Style="{StaticResource parametersHostStyle}">
         <local:ConfigurationPanel />
      </ContentControl>

      <!-- Add a Xceed DataGridControl. -->
      <xcdg:DataGridControl x:Name="grid"
                            ItemsSource="{Binding Source={StaticResource cvsOrders}}"
                            EditTriggers="BeginEditCommand,ActivationGesture,ClickOnCurrentCell"
                            NavigationBehavior="CellOnly"
                            FlowDirection="{Binding Source={x:Static local:ConfigurationData.Singleton}, Path=FlowDirection}"
                            IsDeleteCommandEnabled="True"
                            DeletingSelectedItems="grid_DeletingSelectedItems"
                            DeletingSelectedItemError="grid_DeletingSelectedItemError"
                            AutoCreateForeignKeyConfigurations="True">

         <!-- Here We define the MergedHeaders -->
         <xcdg:DataGridControl.MergedHeaders>
            <xcdg:MergedHeader>
               <xcdg:MergedHeader.MergedColumns>
                  <xcdg:MergedColumn FieldName="IDs"
                                     Title="IDs"
                                     ChildColumnNames="OrderID EmployeeID" />

                  <xcdg:MergedColumn FieldName="OrderDetails"
                                     Title="Order Details"
                                     ChildColumnNames="CustomerID OrderDate ShipVia Freight" />

                  <xcdg:MergedColumn FieldName="AddressDetails"
                                     Title="Address Details"
                                     ChildColumnNames="ShipCity ShipCountry ShipName ShipAddress ShipPostalCode ShipRegion" />

               </xcdg:MergedHeader.MergedColumns>
            </xcdg:MergedHeader>
         </xcdg:DataGridControl.MergedHeaders>

         <xcdg:DataGridControl.View>
            <!-- In this sample, you can define this resource to specify the default 
                 theme this DataGridControl will be in. This is not mandatory, so we
                 use a DynamicResource to silently ignore its absence. -->
            <xcdg:TableflowView Theme="{DynamicResource defaultTheme}"
                                ContainerHeight="50"
                                FixedColumnCount="1"
                                UseDefaultHeadersFooters="False"
                                AllowHeadersFootersEditor="{Binding Source={x:Static local:ConfigurationData.Singleton}, Path=ShowHeadersFootersEditor}"
                                AreHeadersSticky="{Binding Source={x:Static local:ConfigurationData.Singleton}, Path=AreHeadersSticky}"
                                AreFootersSticky="{Binding Source={x:Static local:ConfigurationData.Singleton}, Path=AreFootersSticky}"
                                AreGroupHeadersSticky="{Binding Source={x:Static local:ConfigurationData.Singleton}, Path=AreGroupHeadersSticky}"
                                AreGroupFootersSticky="{Binding Source={x:Static local:ConfigurationData.Singleton}, Path=AreGroupFootersSticky}"
                                AreParentRowsSticky="{Binding Source={x:Static local:ConfigurationData.Singleton}, Path=AreParentRowsSticky}"
                                AreGroupsFlattened="{Binding Source={x:Static local:ConfigurationData.Singleton}, Path=AreGroupsFlattened}"
                                IsAnimatedColumnReorderingEnabled="{Binding Source={x:Static local:ConfigurationData.Singleton}, Path=IsAnimatedColumnReorderingEnabled}"
                                ScrollingAnimationDuration="{Binding Source={x:Static local:ConfigurationData.Singleton}, Path=ScrollingAnimationDuration}"
                                RowFadeInAnimationDuration="{Binding Source={x:Static local:ConfigurationData.Singleton}, Path=RowFadeInAnimationDuration}"
                                AllowFixedColumnSplitterDrag="{Binding Source={x:Static local:ConfigurationData.Singleton}, Path=AllowFixedColumnSplitterDrag}"
                                ShowFixedColumnSplitter="{Binding Source={x:Static local:ConfigurationData.Singleton}, Path=ShowFixedColumnSplitter}"
                                ShowScrollTip="{Binding Source={x:Static local:ConfigurationData.Singleton}, Path=ShowScrollTip}"
                                IsAlternatingRowStyleEnabled="{Binding Source={x:Static local:ConfigurationData.Singleton}, Path=IsAlternatingRowStyleEnabled}"
                                AllowColumnChooser="{Binding Source={x:Static local:ConfigurationData.Singleton}, Path=AllowColumnChooser}"
                                ShowSortIndex="{Binding Source={x:Static local:ConfigurationData.Singleton}, Path=ShowSortIndex}" />
         </xcdg:DataGridControl.View>

         <xcdg:DataGridControl.Columns>
            <!--Preconfigure the Columns of the grid with custom CellContentTemplate, 
                CellEditor and CellValidationRule. -->
            <xcdg:Column FieldName="OrderID"
                         Title="ID"
                         ReadOnly="True"
                         Width="50"
                         CellContentTemplate="{StaticResource integralCellContentTemplate}">
            </xcdg:Column>

            <xcdg:Column FieldName="EmployeeID"
                         Title="Employee"
                         Width="160"
                         TextWrapping="Wrap"
                         CellContentTemplate="{StaticResource employeeDataTemplate}"
                         ForeignKeyConfiguration="{StaticResource employeesForeignKeyConfiguration}" />

            <xcdg:Column FieldName="CustomerID"
                         Title="Customer"
                         Width="240"
                         ForeignKeyConfiguration="{StaticResource customersForeignKeyConfiguration}">
               <xcdg:Column.CellContentTemplate>
                  <DataTemplate>
                     <TextBlock TextWrapping="Wrap">
                        <TextBlock.Text>
                           <MultiBinding Converter="{StaticResource customerMultiConverter}">
                              <Binding Path="CompanyName" />
                              <Binding Path="ContactName" />
                           </MultiBinding>
                        </TextBlock.Text>
                     </TextBlock>
                  </DataTemplate>

               </xcdg:Column.CellContentTemplate>
            </xcdg:Column>

            <xcdg:Column FieldName="OrderDate"
                         Title="Order Date"
                         TextWrapping="Wrap"
                         CellContentTemplate="{StaticResource shortDateCellDataTemplate}" />

            <xcdg:Column FieldName="ShipVia"
                         Title="Shipper"
                         TextWrapping="Wrap"
                         ForeignKeyConfiguration="{StaticResource shipViaForeignKeyConfiguration}" />

            <xcdg:Column FieldName="Freight"
                         Width="70"
                         TextWrapping="Wrap"
                         CellContentTemplate="{StaticResource currencyCellContentTemplate}"
                         GroupValueTemplate="{StaticResource currencyCellContentTemplate}" />

            <xcdg:Column FieldName="ShipCity"
                         Title="City" />

            <xcdg:Column FieldName="ShipCountry"
                         Title="Country"
                         TextWrapping="Wrap"
                         GroupValueTemplate="{StaticResource countryCellContentTemplate}"
                         CellContentTemplate="{StaticResource countryCellContentTemplate}" />

            <xcdg:Column FieldName="ShipName"
                         Title="Ship to"
                         TextWrapping="Wrap"
                         Width="192" />

            <xcdg:Column FieldName="ShipAddress"
                         Title="Address"
                         TextWrapping="Wrap"
                         Width="250" />

            <xcdg:Column FieldName="ShipPostalCode"
                         TextWrapping="Wrap"
                         Title="Postal Code" />

            <xcdg:Column FieldName="ShipRegion"
                         TextWrapping="Wrap"
                         Title="Region" />

            <xcdg:Column FieldName="RequiredDate"
                         Title="Required Date"
                         TextWrapping="Wrap"
                         CellContentTemplate="{StaticResource shortDateCellDataTemplate}" />

            <xcdg:Column FieldName="ShippedDate"
                         Title="Shipped Date"
                         TextWrapping="Wrap"
                         CellContentTemplate="{StaticResource shortDateCellDataTemplate}" />

         </xcdg:DataGridControl.Columns>
      </xcdg:DataGridControl>

   </DockPanel>
</Page>
